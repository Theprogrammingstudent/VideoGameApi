From VideoGameController.cs:

	- Before the DB is created you need static data for the lifetime of the app, below is the sample data that can be added to the top of videogamecontroller class
		
		static private List<VideoGame> videoGames = new List<VideoGame>
        {
            new VideoGame
            {
                Id = 1,
                Title = "Spider-Man 2",
                Platform = "PS5",
                Developer = "Insomniac Games",
                Publisher = "Sony Interactive Entertainment"
            },
            new VideoGame
            {
                Id = 2,
                Title = "The Legend of Zelda: Breadth of the Wild",
                Platform = "Nintendo Switch",
                Developer = "Nintendo EPD",
                Publisher = "Nintendo"
            },
            new VideoGame
            {
                Id = 3,
                Title = "Cyberpunk 2077 2",
                Platform = "PC",
                Developer = "CD Projekt Red",
                Publisher = "CD Projekt"
            }

            spare
            {
              "title": "Halo Infinite",
              "platform": "Xbox Series X",
              "developer": "343 Industries",
              "publisher": "Xbox Game Studios"
            }

        };



What is this code?
     public class VideoGameController(VideoGameDBContext context) : ControllerBase
    {

        private readonly VideoGameDBContext _context = context;

        [HttpGet]
        public async Task<ActionResult<List<VideoGame>>> GetVideoGames()
        {
            return Ok(await _context.VideoGames.ToListAsync());
        }

    }


    //[HttpGet("{id}")]
        //public ActionResult<VideoGame> GetVideoGameById(int id)
        //{
        //    var game = videoGames.FirstOrDefault(g => g.Id == id);
        //    if (game is null)
        //        return NotFound();

        //    return Ok(game);
        //}

        //[HttpPost]
        //public ActionResult<VideoGame> AddVideoGame(VideoGame newGame)
        //{
        //    if (newGame is null)
        //        return BadRequest();

        //    newGame.Id = videoGames.Max(g => g.Id) + 1;
        //    videoGames.Add(newGame);
        //    return CreatedAtAction(nameof(GetVideoGameById), new { id = newGame.Id }, newGame);

        //}

        //[HttpPut("{id}")]
        //public IActionResult UpdateVideoGame(int id, VideoGame updatesGame)
        //{
        //    var game = videoGames.FirstOrDefault(g => g.Id == id);
        //    if (game is null)
        //        return NotFound();

        //    game.Title = updatesGame.Title;
        //    game.Platform = updatesGame.Platform;
        //    game.Developer = updatesGame.Developer;
        //    game.Publisher = updatesGame.Publisher;

        //    return NoContent();
        //}

        //[HttpDelete]
        //public IActionResult DeleteVideoGame(int id)
        //{
        //    var game = videoGames.FirstOrDefault(g => g.Id == id);

        //    if (game is null)
        //        return NotFound();

        //    videoGames.Remove(game);
        //    return NoContent();

        //}